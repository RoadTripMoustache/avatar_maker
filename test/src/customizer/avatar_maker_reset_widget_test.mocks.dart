// Mocks generated by Mockito 5.4.4 from annotations
// in avatar_maker/test/src/customizer/avatar_maker_reset_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i11;

import 'package:avatar_maker/l10n/app_localizations.dart' as _i3;
import 'package:avatar_maker/src/core/controllers/avatar_maker_controller.dart'
    as _i4;
import 'package:avatar_maker/src/core/enums/property_category_ids.dart' as _i6;
import 'package:avatar_maker/src/core/models/customized_property_category.dart'
    as _i5;
import 'package:avatar_maker/src/core/models/property_item.dart' as _i7;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxString_0 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppLocalizations_1 extends _i1.SmartFake
    implements _i3.AppLocalizations {
  _FakeAppLocalizations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_2<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AvatarMakerController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAvatarMakerController extends _i1.Mock
    implements _i4.AvatarMakerController {
  @override
  _i2.RxString get displayedAvatarSVG => (super.noSuchMethod(
        Invocation.getter(#displayedAvatarSVG),
        returnValue: _FakeRxString_0(
          this,
          Invocation.getter(#displayedAvatarSVG),
        ),
        returnValueForMissingStub: _FakeRxString_0(
          this,
          Invocation.getter(#displayedAvatarSVG),
        ),
      ) as _i2.RxString);

  @override
  set displayedAvatarSVG(_i2.RxString? _displayedAvatarSVG) =>
      super.noSuchMethod(
        Invocation.setter(
          #displayedAvatarSVG,
          _displayedAvatarSVG,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.CustomizedPropertyCategory> get propertyCategories =>
      (super.noSuchMethod(
        Invocation.getter(#propertyCategories),
        returnValue: <_i5.CustomizedPropertyCategory>[],
        returnValueForMissingStub: <_i5.CustomizedPropertyCategory>[],
      ) as List<_i5.CustomizedPropertyCategory>);

  @override
  set propertyCategories(
          List<_i5.CustomizedPropertyCategory>? _propertyCategories) =>
      super.noSuchMethod(
        Invocation.setter(
          #propertyCategories,
          _propertyCategories,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.CustomizedPropertyCategory> get displayedPropertyCategories =>
      (super.noSuchMethod(
        Invocation.getter(#displayedPropertyCategories),
        returnValue: <_i5.CustomizedPropertyCategory>[],
        returnValueForMissingStub: <_i5.CustomizedPropertyCategory>[],
      ) as List<_i5.CustomizedPropertyCategory>);

  @override
  set displayedPropertyCategories(
          List<_i5.CustomizedPropertyCategory>? _displayedPropertyCategories) =>
      super.noSuchMethod(
        Invocation.setter(
          #displayedPropertyCategories,
          _displayedPropertyCategories,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<_i6.PropertyCategoryIds, _i7.PropertyItem> get defaultSelectedOptions =>
      (super.noSuchMethod(
        Invocation.getter(#defaultSelectedOptions),
        returnValue: <_i6.PropertyCategoryIds, _i7.PropertyItem>{},
        returnValueForMissingStub: <_i6.PropertyCategoryIds,
            _i7.PropertyItem>{},
      ) as Map<_i6.PropertyCategoryIds, _i7.PropertyItem>);

  @override
  set defaultSelectedOptions(
          Map<_i6.PropertyCategoryIds, _i7.PropertyItem>?
              _defaultSelectedOptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultSelectedOptions,
          _defaultSelectedOptions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AppLocalizations get l10n => (super.noSuchMethod(
        Invocation.getter(#l10n),
        returnValue: _FakeAppLocalizations_1(
          this,
          Invocation.getter(#l10n),
        ),
        returnValueForMissingStub: _FakeAppLocalizations_1(
          this,
          Invocation.getter(#l10n),
        ),
      ) as _i3.AppLocalizations);

  @override
  set l10n(_i3.AppLocalizations? _l10n) => super.noSuchMethod(
        Invocation.setter(
          #l10n,
          _l10n,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<_i6.PropertyCategoryIds, _i7.PropertyItem> get selectedOptions =>
      (super.noSuchMethod(
        Invocation.getter(#selectedOptions),
        returnValue: <_i6.PropertyCategoryIds, _i7.PropertyItem>{},
        returnValueForMissingStub: <_i6.PropertyCategoryIds,
            _i7.PropertyItem>{},
      ) as Map<_i6.PropertyCategoryIds, _i7.PropertyItem>);

  @override
  set selectedOptions(
          Map<_i6.PropertyCategoryIds, _i7.PropertyItem>? _selectedOptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedOptions,
          _selectedOptions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
        returnValueForMissingStub: _FakeInternalFinalCallback_2<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePreview({String? newAvatarMakerSVG = r''}) => super.noSuchMethod(
        Invocation.method(
          #updatePreview,
          [],
          {#newAvatarMakerSVG: newAvatarMakerSVG},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void restoreState() => super.noSuchMethod(
        Invocation.method(
          #restoreState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> saveAvatarSVG({String? jsonAvatarOptions}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAvatarSVG,
          [],
          {#jsonAvatarOptions: jsonAvatarOptions},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  String drawAvatarSVG() => (super.noSuchMethod(
        Invocation.method(
          #drawAvatarSVG,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #drawAvatarSVG,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #drawAvatarSVG,
            [],
          ),
        ),
      ) as String);

  @override
  _i8.Future<
      Map<_i6.PropertyCategoryIds,
          _i7.PropertyItem>> getStoredOptions() => (super.noSuchMethod(
        Invocation.method(
          #getStoredOptions,
          [],
        ),
        returnValue:
            _i8.Future<Map<_i6.PropertyCategoryIds, _i7.PropertyItem>>.value(
                <_i6.PropertyCategoryIds, _i7.PropertyItem>{}),
        returnValueForMissingStub:
            _i8.Future<Map<_i6.PropertyCategoryIds, _i7.PropertyItem>>.value(
                <_i6.PropertyCategoryIds, _i7.PropertyItem>{}),
      ) as _i8.Future<Map<_i6.PropertyCategoryIds, _i7.PropertyItem>>);

  @override
  String getComponentSVG(
    _i6.PropertyCategoryIds? categoryId,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComponentSVG,
          [
            categoryId,
            index,
          ],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getComponentSVG,
            [
              categoryId,
              index,
            ],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #getComponentSVG,
            [
              categoryId,
              index,
            ],
          ),
        ),
      ) as String);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Disposer addListener(_i10.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i10.Disposer);

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i11.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Disposer addListenerId(
    Object? key,
    _i10.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i10.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [InternalFinalCallback].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternalFinalCallback<T> extends _i1.Mock
    implements _i2.InternalFinalCallback<T> {
  @override
  T call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i9.dummyValue<T>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<T>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        ),
      ) as T);
}
